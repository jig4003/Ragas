% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalculateExpFreqs.R
\name{CalculateExpFreqs}
\alias{CalculateExpFreqs}
\title{Calculate Expression Frequencies}
\usage{
CalculateExpFreqs(
  object,
  ident = "seurat_clusters",
  group.by = NULL,
  cutoff = 0,
  verbose = TRUE
)
}
\arguments{
\item{object}{A Seurat or \code{\link[Ragas]{Pi}} object}

\item{ident}{Name of the metadata column as cell identity (default: seurat_clusters)}

\item{group.by}{Additional factor to group the cells by}

\item{cutoff}{Log-expression cutoff (default: 0)}

\item{verbose}{Verbosity (default: TRUE)}
}
\value{
When \code{object} is a Seurat object, a list containing expression frequencies per \code{ident} will be returned;
If \code{object} is a Pi object, an updated Pi object will be returned: a \code{\link[Ragas]{PiExpFreqData}} object that encloses the list
containing expression frequencies per \code{ident} will be created and added to the \code{exp.freq} field.
}
\description{
Calculate single-cell expression frequency for each gene per identity class.
}
\details{
The function will return a list object, either directly as output or indirectly as part of the updated Pi object, with each list element
being a data.frame to store the expression frequencies for all genes per \code{ident}. If \code{group.by} is NULL, the data.frame will have only one column called "AllCells" to store gene expression frequencies
across all the cells for each identity; if \code{group.by} is set, additional columns storing gene expression frequencies in cells groups defined by \code{group.by} will be calculated and stored.
}
\examples{
\dontrun{
my.pi <- CreatePostIntegrationObject(object = csle.pbmc.small) ## a minimum Pi object
my.pi <- CalculateExpFreqs(my.pi)
}
}
