% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pi.R
\name{AddPiData}
\alias{AddPiData}
\alias{AddPiData.default}
\title{Add PiData}
\usage{
AddPiData(x, ...)

\method{AddPiData}{default}(x, value)
}
\arguments{
\item{x}{A PiData/PiDataList/Pi or list object}

\item{...}{Additional arguments}

\item{value}{A \code{PiData} object}
}
\value{
A PiDataList or Pi object.
}
\description{
Add PiData object to an existing PiData/PiDataList/Pi object. This function is intended to combine multiple analysis results of the same type.
}
\examples{
\dontrun{
## Create two PiData objects for markers analysis
res1 <- RunFindAllMarkers(csle.bcell.small,
                         ident = "seurat_clusters",
                         test.use = "wilcox",
                         latent.vars = NULL)
mk1 <- PiMarkerData(data = res1,
                   ident = "seurat_clusters",
                   method = "AllMarkers",
                   test.use = "wilcox",
                   latent.vars = NULL)
res2 <- RunFindAllMarkers(csle.bcell.small,
                         ident = "main.cluster.anno",
                         test.use = "wilcox",
                         latent.vars = NULL)
mk2 <- PiMarkerData(data = res2,
                   ident = "main.cluster.anno",
                   method = "AllMarkers",
                   test.use = "wilcox",
                   latent.vars = NULL)

## Add a PiData object to another PiData object of the same type returns a PiDataList of two elements
mk.list <- AddPiData(mk1, mk2)

## Add a PiData object to an empty list returns a PiDataList
mk.list <- AddPiData(list(), mk1)

## Add a PiData object to a PiDataList. If the same PiData object already exists in the list, it will be overwritten
mk.list1 <- AddPiData(mk.list, mk1)

## Add a PiData object to a Pi object
my.pi <- CreatePostIntegrationObject(csle.bcell.small) ## a minimum Pi object
my.pi <- AddPiData(my.pi, mk1)
}

}
